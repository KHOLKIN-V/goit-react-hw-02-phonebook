{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/AddContactForm/AddContactForm.module.css","components/AddContactForm/AddContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactBook/ContactBook.jsx","App.js","index.js","components/ContactBook/ContactBook.module.css"],"names":["module","exports","AddContactForm","state","name","number","addInputContact","e","currentTarget","value","setState","submitContact","preventDefault","props","submit","reset","className","cs","title","form","onSubmit","this","inputTitle","type","pattern","required","onChange","addBtn","Component","Filter","onFilter","filterContainer","input","target","ContactItem","onDelete","btnDeleteContact","onClick","ContactBook","data","list","map","id","item","App","contacts","filter","formSubmit","includes","alert","newContact","nanoid","old","concat","filterContacts","i","toLowerCase","reshapeFilter","deleteContact","deleteId","filtered","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc9ff258.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__1gDJQ\",\"input\":\"Filter_input__20z5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDeleteContact\":\"ContactItem_btnDeleteContact__1uu5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AddContactForm_title__9ZTxZ\",\"inputTitle\":\"AddContactForm_inputTitle__3MAqf\",\"form\":\"AddContactForm_form__3TZTP\",\"addBtn\":\"AddContactForm_addBtn__1jB5u\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cs from \"./AddContactForm.module.css\";\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  addInputContact = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitContact = (e) => {\r\n    e.preventDefault();\r\n    this.props.submit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n    this.reset();\r\n  };\r\n\r\n  reset = (e) => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className={cs.title}>Phonebook</h1>\r\n        <form className={cs.form} onSubmit={this.submitContact}>\r\n          <label className={cs.inputTitle}>\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.addInputContact}\r\n            />\r\n            <br />\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.addInputContact}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\" className={cs.addBtn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAddContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  submit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cs from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return (\r\n    <div className={cs.filterContainer}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        className={cs.input}\r\n        value={value}\r\n        onChange={(e) => onFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport cs from \"./ContactItem.module.css\";\r\n\r\nconst ContactItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <>\r\n      {name}: {number}\r\n      <button\r\n        className={cs.btnDeleteContact}\r\n        type=\"button\"\r\n        name=\"delete\"\r\n        onClick={onDelete}\r\n      >\r\n        DELETE\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\nimport cs from \"./ContactBook.module.css\";\r\n\r\nconst ContactBook = ({ data, onDelete }) => {\r\n  return (\r\n    <>\r\n      <h2 className={cs.title}>Contacts</h2>\r\n      <ul className={cs.list}>\r\n        {data.map(({ name, number, id }) => (\r\n          <>\r\n            <li className={cs.item} key={id}>\r\n              <ContactItem\r\n                name={name}\r\n                number={number}\r\n                onDelete={() => onDelete(id)}\r\n              />\r\n            </li>\r\n          </>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactBook.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactBook;\r\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport AddContactForm from './components/AddContactForm/AddContactForm'\nimport Filter from './components/Filter/Filter'\nimport ContactBook from './components/ContactBook/ContactBook'\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  }\n\n  formSubmit = (data) => {\n\n    const searchContact = this.state.contacts.map(e => e.name).includes(data.name);\n\n\n    if (searchContact) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      const newContact = {\n        ...data, id: nanoid(),\n      };\n      this.setState(old => ({\n        contacts: old.contacts.concat(newContact),\n      }))\n    }\n\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(i =>\n      i.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\nreshapeFilter = (e) => {\n    this.setState({ filter: e });\n  };\n\n  deleteContact = (deleteId) => {\n    this.setState(old => ({\n      contacts: old.contacts.filter(e => e.id !== deleteId),\n    }));\n  }\n  \n  render() {\n    const filtered = this.filterContacts();\n\n    return (\n      <>\n      <AddContactForm submit={this.formSubmit} />\n      <Filter value={this.state.filter} onFilter={this.reshapeFilter}/>\n      {filtered.length >= 0 ? \n          <ContactBook data={filtered} onDelete={this.deleteContact}/>\n         : <ContactBook data={this.state.contacts} onDelete={this.deleteContact}/>\n      }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactBook_title__22Uke\",\"list\":\"ContactBook_list__22468\",\"item\":\"ContactBook_item__2DVQ-\"};"],"sourceRoot":""}